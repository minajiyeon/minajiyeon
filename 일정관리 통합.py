import calendar

class Schedule: #클래스 정의
    def __init__(self):
        self.schedule = []

    def show_calendar(self, 년도, 월): #달력보기
        달력 = calendar.TextCalendar(firstweekday=6) #달력생성
        달력을_문자로 = 달력.formatmonth(년도, 월) #달력을 문자열로 저장

        for 날 in range(1, calendar.monthrange(년도, 월)[1] + 1):#일정 유무 확인
            events = [이벤트 for 이벤트 in self.schedule if 이벤트["날짜"] == f"{년도}-{월:02d}-{날:02d}"] #events 리스트에 모든 일정의 제목만 저장
            if events:
                달력을_문자로 = 달력을_문자로.replace(f"{날} ", f"{날}*") # 일정 있는 날에 * 추가

        print(달력을_문자로)

        내림차_스케쥴 = sorted(self.schedule, key=lambda 이벤트: (이벤트["날짜"], 이벤트["시간"])) #일정들 시간 순서대로 정렬

        for 이벤트 in 내림차_스케쥴: #일정 출력
            날짜 = 이벤트["날짜"]
            시간 = 이벤트["시간"]
            일정 = 이벤트["일정"]
            print(f"{날짜} {시간}: {일정}")

    def schedule_searching(self, 날짜, 시간=""): 
        스케쥴_리스트 = []
        for 스케쥴 in self.schedule:
            if(시간): #시간에 값이 있을 경우에만 실행
                if(스케쥴["날짜"] == 날짜 and 스케쥴["시간"] == 시간):
                    스케쥴_리스트.append(스케쥴)
            else:
                if(스케쥴["날짜"] == 날짜):
                    스케쥴_리스트.append(스케쥴)

        if(스케쥴_리스트): #스케쥴_리스트에 값이 있을 경우에 실행
            정렬_스케쥴 = sorted(스케쥴_리스트, key=lambda x: x.get("시간", ""))
            for 스케쥴 in 정렬_스케쥴:
                print("============================================================")
                print("시간: ", 스케쥴["시간"])
                print("일정: ", 스케쥴["일정"])
                print("============================================================")
                
        else:
            print("해당하는 일정이 없습니다.")

    def remove_event(self, 날짜, 시간, 일정): #일정 삭제
        삭제_리스트 = []
        for 스케쥴 in self.schedule:
            if(스케쥴["날짜"] == 날짜 and 스케쥴["시간"] == 시간 and 스케쥴["일정"] == 일정):
                삭제_리스트.append(스케쥴)

        for 삭제 in 삭제_리스트:
            self.schedule.remove(삭제)

        if(삭제_리스트): #삭제_리스트에 값이 있을 경우 실행
            print("다음 일정이 삭제되었습니다:")
            for 삭제 in 삭제_리스트:
                print("============================================================")
                print("날짜:", 삭제["날짜"])
                print("시간:", 삭제["시간"])
                print("일정:", 삭제["일정"])
                print("============================================================")
        else:
            print("해당하는 일정이 없습니다.")

    def save_schedule_to_file(self, 파일명): #파일에 저장
        with open(파일명, "w") as file:
            for 삭제 in self.schedule:
                file.write(f"날짜 : {event['날짜']}\n")
                file.write(f"시간 : {event['시간']}\n")
                file.write(f"일정 : {event['일정']}\n")

    def load_schedule_from_file(self, 파일명): #저장된 파일을 불러옴
        self.schedule = []
        with open(파일명, "r") as file:
            lines = file.readlines()
            for line in lines:
                날짜, 시간, 일정 = line.strip().split(",")
                self.schedule.append({"날짜": 날짜, "시간": 시간, "일정": 일정})

MySchedule = Schedule()
while(True):
    print("===== 일정 관리 프로그램 =====")
    print("= 1.달력 보기 (참고용 달력)  =")
    print("= 2.일정 추가                =")
    print("= 3.일정 조회 (날짜)         =")
    print("= 4.일정 조회 (날짜 및 시간) =")
    print("= 5.일정 삭제                =")
    print("= 6.파일 저장 및 종료        =")
    print("==============================")
    기능_입력 = input("원하는 기능을 선택하세요(숫자로) : ") #사용자에게 원하는 기능을 입력받
    print("============================================================")

    if(기능_입력  == "1"): #달력 호출
        print("============================================================")
        년도 = int(input("년도를 입력하세요 : "))
        월 = int(input("월을 입력하세요 : "))
        print("============================================================")
        MySchedule.show_calendar(년도, 월)
        
    elif(기능_입력 == "2"): #일정 추가
        print("============================================================")
        날짜 = input("날짜를 입력하세요 (YYYY-MM-DD) : ")
        시간 = input("시간을 입력하세요 (HH:MM) : ")
        일정 = input("저장할 일정을 입력하세요 : ")
        print("============================================================")
        MySchedule.schedule.append({"날짜": 날짜, "시간" : 시간, "일정": 일정})
        
    elif(기능_입력 == "3"): #일정 조회(날짜)
        print("============================================================")
        날짜 = input("조회할 날짜를 입력하세요 (YYYY-MM-DD) : ")
        print("============================================================")
        MySchedule.schedule_searching(날짜)
        
        
    elif(기능_입력 == "4"): #일정 조회(날짜 및 시간)
        print("============================================================")
        날짜 = input("조회할 날짜를 입력하세요 (YYYY-MM-DD) : ")
        MySchedule.schedule_searching(날짜) #그날에 무슨 일정들이 있는지 한 번 더 보여줌
        시간 = input("조회할 시간을 입력하세요 (HH:MM) : ")
        print("============================================================")
        MySchedule.schedule_searching(날짜, 시간)
        
    elif(기능_입력 == "5"): #일정 삭제
        print("============================================================")
        날짜 = input("삭제할 일정의 날짜를 입력하세요 (YYYY-MM-DD) : ")
        MySchedule.schedule_searching(날짜) #그날에 무슨 일정들이 있는지 한 번 더 보여줌
        시간 = input("삭제할 일정의 시간을 입력하세요 (HH:MM) : ")
        일정 = input("삭제할 일정을 입력하세요 : ")
        print("============================================================")
        MySchedule.remove_event(날짜, 시간, 일정)

    elif(기능_입력 == "6"): # 파일 저장 및 종료
        print("============================================================")
        filename = input("일정을 저장할 파일명을 입력하세요: ")
        MySchedule.save_스케쥴_to_file(파일명)
        print("프로그램을 종료합니다.")
        print("============================================================")
        break
    
    else: #1~6이 아닌 다른 입력을 받았을 경우
        print("유효하지 않은 선택입니다. 다시 선택해주세요.")
